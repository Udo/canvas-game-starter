{"version":3,"file":"index.mjs","sources":["../../../../node_modules/gifuct-js/lib/index.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.decompressFrames = exports.decompressFrame = exports.parseGIF = void 0;\n\nvar _gif = _interopRequireDefault(require(\"js-binary-schema-parser/lib/schemas/gif\"));\n\nvar _jsBinarySchemaParser = require(\"js-binary-schema-parser\");\n\nvar _uint = require(\"js-binary-schema-parser/lib/parsers/uint8\");\n\nvar _deinterlace = require(\"./deinterlace\");\n\nvar _lzw = require(\"./lzw\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar parseGIF = function parseGIF(arrayBuffer) {\n  var byteData = new Uint8Array(arrayBuffer);\n  return (0, _jsBinarySchemaParser.parse)((0, _uint.buildStream)(byteData), _gif[\"default\"]);\n};\n\nexports.parseGIF = parseGIF;\n\nvar generatePatch = function generatePatch(image) {\n  var totalPixels = image.pixels.length;\n  var patchData = new Uint8ClampedArray(totalPixels * 4);\n\n  for (var i = 0; i < totalPixels; i++) {\n    var pos = i * 4;\n    var colorIndex = image.pixels[i];\n    var color = image.colorTable[colorIndex] || [0, 0, 0];\n    patchData[pos] = color[0];\n    patchData[pos + 1] = color[1];\n    patchData[pos + 2] = color[2];\n    patchData[pos + 3] = colorIndex !== image.transparentIndex ? 255 : 0;\n  }\n\n  return patchData;\n};\n\nvar decompressFrame = function decompressFrame(frame, gct, buildImagePatch) {\n  if (!frame.image) {\n    console.warn('gif frame does not have associated image.');\n    return;\n  }\n\n  var image = frame.image; // get the number of pixels\n\n  var totalPixels = image.descriptor.width * image.descriptor.height; // do lzw decompression\n\n  var pixels = (0, _lzw.lzw)(image.data.minCodeSize, image.data.blocks, totalPixels); // deal with interlacing if necessary\n\n  if (image.descriptor.lct.interlaced) {\n    pixels = (0, _deinterlace.deinterlace)(pixels, image.descriptor.width);\n  }\n\n  var resultImage = {\n    pixels: pixels,\n    dims: {\n      top: frame.image.descriptor.top,\n      left: frame.image.descriptor.left,\n      width: frame.image.descriptor.width,\n      height: frame.image.descriptor.height\n    }\n  }; // color table\n\n  if (image.descriptor.lct && image.descriptor.lct.exists) {\n    resultImage.colorTable = image.lct;\n  } else {\n    resultImage.colorTable = gct;\n  } // add per frame relevant gce information\n\n\n  if (frame.gce) {\n    resultImage.delay = (frame.gce.delay || 10) * 10; // convert to ms\n\n    resultImage.disposalType = frame.gce.extras.disposal; // transparency\n\n    if (frame.gce.extras.transparentColorGiven) {\n      resultImage.transparentIndex = frame.gce.transparentColorIndex;\n    }\n  } // create canvas usable imagedata if desired\n\n\n  if (buildImagePatch) {\n    resultImage.patch = generatePatch(resultImage);\n  }\n\n  return resultImage;\n};\n\nexports.decompressFrame = decompressFrame;\n\nvar decompressFrames = function decompressFrames(parsedGif, buildImagePatches) {\n  return parsedGif.frames.filter(function (f) {\n    return f.image;\n  }).map(function (f) {\n    return decompressFrame(f, parsedGif.gct, buildImagePatches);\n  });\n};\n\nexports.decompressFrames = decompressFrames;"],"names":["require$$0","require$$1","require$$2","require$$3","require$$4","parseGIF","generatePatch","decompressFrame","decompressFrames"],"mappings":"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","x_google_ignoreList":[0]}