'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

require('../../../_virtual/_commonjsHelpers.js');
var index = require('../../../_virtual/index.js');
require('../../../_virtual/gif.js');
require('../../../_virtual/index2.js');
require('../../../_virtual/uint8.js');
require('../../../_virtual/deinterlace.js');
require('../../../_virtual/lzw.js');
var gif = require('../../../_virtual/gif2.js');
var index$1 = require('../../../_virtual/index3.js');
var uint8 = require('../../../_virtual/uint82.js');
var deinterlace = require('../../../_virtual/deinterlace2.js');
var lzw = require('../../../_virtual/lzw2.js');

"use strict";
Object.defineProperty(index.__exports, "__esModule", {
  value: true
});
exports.decompressFrames = index.__exports.decompressFrames = exports.decompressFrame = index.__exports.decompressFrame = exports.parseGIF = index.__exports.parseGIF = void 0;
var _gif = _interopRequireDefault(gif.__exports);
var _jsBinarySchemaParser = index$1.__exports;
var _uint = uint8.__exports;
var _deinterlace = deinterlace.__exports;
var _lzw = lzw.__exports;
function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { "default": obj };
}
var parseGIF = function parseGIF2(arrayBuffer) {
  var byteData = new Uint8Array(arrayBuffer);
  return (0, _jsBinarySchemaParser.parse)((0, _uint.buildStream)(byteData), _gif["default"]);
};
exports.parseGIF = index.__exports.parseGIF = parseGIF;
var generatePatch = function generatePatch2(image) {
  var totalPixels = image.pixels.length;
  var patchData = new Uint8ClampedArray(totalPixels * 4);
  for (var i = 0; i < totalPixels; i++) {
    var pos = i * 4;
    var colorIndex = image.pixels[i];
    var color = image.colorTable[colorIndex] || [0, 0, 0];
    patchData[pos] = color[0];
    patchData[pos + 1] = color[1];
    patchData[pos + 2] = color[2];
    patchData[pos + 3] = colorIndex !== image.transparentIndex ? 255 : 0;
  }
  return patchData;
};
var decompressFrame = function decompressFrame2(frame, gct, buildImagePatch) {
  if (!frame.image) {
    console.warn("gif frame does not have associated image.");
    return;
  }
  var image = frame.image;
  var totalPixels = image.descriptor.width * image.descriptor.height;
  var pixels = (0, _lzw.lzw)(image.data.minCodeSize, image.data.blocks, totalPixels);
  if (image.descriptor.lct.interlaced) {
    pixels = (0, _deinterlace.deinterlace)(pixels, image.descriptor.width);
  }
  var resultImage = {
    pixels,
    dims: {
      top: frame.image.descriptor.top,
      left: frame.image.descriptor.left,
      width: frame.image.descriptor.width,
      height: frame.image.descriptor.height
    }
  };
  if (image.descriptor.lct && image.descriptor.lct.exists) {
    resultImage.colorTable = image.lct;
  } else {
    resultImage.colorTable = gct;
  }
  if (frame.gce) {
    resultImage.delay = (frame.gce.delay || 10) * 10;
    resultImage.disposalType = frame.gce.extras.disposal;
    if (frame.gce.extras.transparentColorGiven) {
      resultImage.transparentIndex = frame.gce.transparentColorIndex;
    }
  }
  if (buildImagePatch) {
    resultImage.patch = generatePatch(resultImage);
  }
  return resultImage;
};
exports.decompressFrame = index.__exports.decompressFrame = decompressFrame;
var decompressFrames = function decompressFrames2(parsedGif, buildImagePatches) {
  return parsedGif.frames.filter(function(f) {
    return f.image;
  }).map(function(f) {
    return decompressFrame(f, parsedGif.gct, buildImagePatches);
  });
};
exports.decompressFrames = index.__exports.decompressFrames = decompressFrames;

exports.default = index.__exports;
//# sourceMappingURL=index.js.map
