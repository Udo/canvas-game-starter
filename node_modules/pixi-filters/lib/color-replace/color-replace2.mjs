var source = "struct ColorReplaceUniforms {\n  uOriginalColor: vec3<f32>,\n  uTargetColor: vec3<f32>,\n  uTolerance: f32,\n};\n\n@group(0) @binding(1) var uTexture: texture_2d<f32>; \n@group(0) @binding(2) var uSampler: sampler;\n@group(1) @binding(0) var<uniform> colorReplaceUniforms : ColorReplaceUniforms;\n\n@fragment\nfn mainFragment(\n   @builtin(position) position: vec4<f32>,\n    @location(0) uv : vec2<f32>\n) -> @location(0) vec4<f32> {\n  let sample: vec4<f32> = textureSample(uTexture, uSampler, uv);\n\n  let colorDiff: vec3<f32> = colorReplaceUniforms.uOriginalColor - (sample.rgb / max(sample.a, 0.0000000001));\n  let colorDistance: f32 = length(colorDiff);\n  let doReplace: f32 = step(colorDistance, colorReplaceUniforms.uTolerance);\n\n  return vec4<f32>(mix(sample.rgb, (colorReplaceUniforms.uTargetColor + colorDiff) * sample.a, doReplace), sample.a);\n}";

export { source as default };
//# sourceMappingURL=color-replace2.mjs.map
