'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var fragment = "precision highp float;\nin vec2 vTextureCoord;\nout vec4 finalColor;\n\nuniform sampler2D uTexture;\nuniform float uStrength;\nuniform float uNoiseScale;\nuniform float uOffsetX;\nuniform float uOffsetY;\nuniform float uOffsetZ;\nuniform float uStep;\n\nuniform vec4 uInputSize;\nuniform vec4 uInputClamp;\n\n//Noise from: https://www.shadertoy.com/view/4sc3z2\nconst vec3 MOD3 = vec3(.1031,.11369,.13787);\nvec3 hash33(vec3 p3)\n{\n\tp3 = fract(p3 * MOD3);\n    p3 += dot(p3, p3.yxz+19.19);\n    return -1.0 + 2.0 * fract(vec3((p3.x + p3.y)*p3.z, (p3.x+p3.z)*p3.y, (p3.y+p3.z)*p3.x));\n}\n\nfloat simplex_noise(vec3 p)\n{\n    const float K1 = 0.333333333;\n    const float K2 = 0.166666667;\n    \n    vec3 i = floor(p + (p.x + p.y + p.z) * K1);\n    vec3 d0 = p - (i - (i.x + i.y + i.z) * K2);\n    \n    vec3 e = step(vec3(0.0), d0 - d0.yzx);\n\tvec3 i1 = e * (1.0 - e.zxy);\n\tvec3 i2 = 1.0 - e.zxy * (1.0 - e);\n    \n    vec3 d1 = d0 - (i1 - 1.0 * K2);\n    vec3 d2 = d0 - (i2 - 2.0 * K2);\n    vec3 d3 = d0 - (1.0 - 3.0 * K2);\n    \n    vec4 h = max(0.6 - vec4(dot(d0, d0), dot(d1, d1), dot(d2, d2), dot(d3, d3)), 0.0);\n    vec4 n = h * h * h * h * vec4(dot(d0, hash33(i)), dot(d1, hash33(i + i1)), dot(d2, hash33(i + i2)), dot(d3, hash33(i + 1.0)));\n    \n    return dot(vec4(31.316), n);\n}\n\nvoid main(void)\n{\n    float noise = simplex_noise(\n                    vec3(vTextureCoord*uNoiseScale+vec2(uOffsetX, uOffsetY), uOffsetZ)\n                ) * 0.5 + 0.5;\n\n    noise += 2.0 * uStrength - 1.0;\n    noise = clamp(noise, 0.0, 1.0);\n\n    if (uStep > 0.0) {  //step > 0.5\n        noise = 1.0 - step(noise, uStep);\n    }\n\n    finalColor = texture(uTexture, vTextureCoord) * noise;\n}\n";

exports["default"] = fragment;
//# sourceMappingURL=simplex.js.map
